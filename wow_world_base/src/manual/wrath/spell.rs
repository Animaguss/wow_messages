// AUTOGENERATED_START
use crate::wrath::{
};

#[derive(Debug, Copy, Clone)]
pub struct Spell {
    pub entry: u32,
    pub category: i32,
    pub dispel: i32,
    pub mechanic: i32,
    pub attributes: u32,
    pub attributes_ex: u32,
    pub attributes_ex2: u32,
    pub attributes_ex3: u32,
    pub attributes_ex4: u32,
    pub attributes_ex5: u32,
    pub attributes_ex6: u32,
    pub attributes_ex7: u32,
    pub stances: u32,
    pub stances2: u32,
    pub stances_not: u32,
    pub stances_not2: u32,
    pub targets: i32,
    pub target_creature_type: i32,
    pub requires_spell_focus: i32,
    pub facing_caster_flags: i32,
    pub caster_aura_state: i32,
    pub target_aura_state: i32,
    pub caster_aura_state_not: i32,
    pub target_aura_state_not: i32,
    pub caster_aura_spell: i32,
    pub target_aura_spell: i32,
    pub exclude_caster_aura_spell: i32,
    pub exclude_target_aura_spell: i32,
    pub casting_time_index: i32,
    pub recovery_time: i32,
    pub category_recovery_time: i32,
    pub interrupt_flags: i32,
    pub aura_interrupt_flags: u32,
    pub channel_interrupt_flags: u32,
    pub proc_flags: i32,
    pub proc_chance: i32,
    pub proc_charges: i32,
    pub max_level: i32,
    pub base_level: i32,
    pub spell_level: i32,
    pub duration_index: i32,
    pub power_type: u32,
    pub mana_cost: i32,
    pub mana_cost_per_level: i32,
    pub mana_per_second: i32,
    pub mana_per_second_per_level: i32,
    pub range_index: i32,
    pub speed: f32,
    pub modal_next_spell: i32,
    pub stack_amount: i32,
    pub equipped_item_class: i32,
    pub equipped_item_sub_class_mask: i32,
    pub equipped_item_inventory_type_mask: i32,
    pub spell_visual: i32,
    pub spell_visual2: i32,
    pub spell_icon_id: i32,
    pub active_icon_id: i32,
    pub spell_priority: i32,
    pub spell_name: &'static str,
    pub spell_name2: &'static str,
    pub spell_name3: &'static str,
    pub spell_name4: &'static str,
    pub spell_name5: &'static str,
    pub spell_name6: &'static str,
    pub spell_name7: &'static str,
    pub spell_name8: &'static str,
    pub spell_name9: &'static str,
    pub spell_name10: &'static str,
    pub spell_name11: &'static str,
    pub spell_name12: &'static str,
    pub spell_name13: &'static str,
    pub spell_name14: &'static str,
    pub spell_name15: &'static str,
    pub spell_name16: &'static str,
    pub rank1: &'static str,
    pub rank2: &'static str,
    pub rank3: &'static str,
    pub rank4: &'static str,
    pub rank5: &'static str,
    pub rank6: &'static str,
    pub rank7: &'static str,
    pub rank8: &'static str,
    pub rank9: &'static str,
    pub rank10: &'static str,
    pub rank11: &'static str,
    pub rank12: &'static str,
    pub rank13: &'static str,
    pub rank14: &'static str,
    pub rank15: &'static str,
    pub rank16: &'static str,
    pub mana_cost_percentage: i32,
    pub start_recovery_category: i32,
    pub start_recovery_time: i32,
    pub max_target_level: i32,
    pub spell_family_name: i32,
    pub spell_family_flags: u64,
    pub spell_family_flags2: u32,
    pub max_affected_targets: i32,
    pub dmg_class: i32,
    pub prevention_type: i32,
    pub stance_bar_order: i32,
    pub min_faction_id: i32,
    pub min_reputation: i32,
    pub required_aura_vision: i32,
    pub area_id: u32,
    pub school_mask: i32,
    pub rune_cost_id: u32,
    pub spell_missile_id: u32,
    pub power_display_id: u32,
    pub spell_description_variable_id: u32,
    pub spell_difficulty_id: u32,
    pub is_server_side: u32,
    pub attributes_serverside: i32,
    pub reagents: [Reagent; 8],
    pub effects: [SpellEffect; 3],
    pub totems: [Totem; 2],
    pub totem_categories: [TotemCategory; 2],
}

impl Spell {
    #[allow(clippy::complexity)]
    pub const fn new(
        entry: u32,
        category: i32,
        dispel: i32,
        mechanic: i32,
        attributes: u32,
        attributes_ex: u32,
        attributes_ex2: u32,
        attributes_ex3: u32,
        attributes_ex4: u32,
        attributes_ex5: u32,
        attributes_ex6: u32,
        attributes_ex7: u32,
        stances: u32,
        stances2: u32,
        stances_not: u32,
        stances_not2: u32,
        targets: i32,
        target_creature_type: i32,
        requires_spell_focus: i32,
        facing_caster_flags: i32,
        caster_aura_state: i32,
        target_aura_state: i32,
        caster_aura_state_not: i32,
        target_aura_state_not: i32,
        caster_aura_spell: i32,
        target_aura_spell: i32,
        exclude_caster_aura_spell: i32,
        exclude_target_aura_spell: i32,
        casting_time_index: i32,
        recovery_time: i32,
        category_recovery_time: i32,
        interrupt_flags: i32,
        aura_interrupt_flags: u32,
        channel_interrupt_flags: u32,
        proc_flags: i32,
        proc_chance: i32,
        proc_charges: i32,
        max_level: i32,
        base_level: i32,
        spell_level: i32,
        duration_index: i32,
        power_type: u32,
        mana_cost: i32,
        mana_cost_per_level: i32,
        mana_per_second: i32,
        mana_per_second_per_level: i32,
        range_index: i32,
        speed: f32,
        modal_next_spell: i32,
        stack_amount: i32,
        equipped_item_class: i32,
        equipped_item_sub_class_mask: i32,
        equipped_item_inventory_type_mask: i32,
        spell_visual: i32,
        spell_visual2: i32,
        spell_icon_id: i32,
        active_icon_id: i32,
        spell_priority: i32,
        spell_name: &'static str,
        spell_name2: &'static str,
        spell_name3: &'static str,
        spell_name4: &'static str,
        spell_name5: &'static str,
        spell_name6: &'static str,
        spell_name7: &'static str,
        spell_name8: &'static str,
        spell_name9: &'static str,
        spell_name10: &'static str,
        spell_name11: &'static str,
        spell_name12: &'static str,
        spell_name13: &'static str,
        spell_name14: &'static str,
        spell_name15: &'static str,
        spell_name16: &'static str,
        rank1: &'static str,
        rank2: &'static str,
        rank3: &'static str,
        rank4: &'static str,
        rank5: &'static str,
        rank6: &'static str,
        rank7: &'static str,
        rank8: &'static str,
        rank9: &'static str,
        rank10: &'static str,
        rank11: &'static str,
        rank12: &'static str,
        rank13: &'static str,
        rank14: &'static str,
        rank15: &'static str,
        rank16: &'static str,
        mana_cost_percentage: i32,
        start_recovery_category: i32,
        start_recovery_time: i32,
        max_target_level: i32,
        spell_family_name: i32,
        spell_family_flags: u64,
        spell_family_flags2: u32,
        max_affected_targets: i32,
        dmg_class: i32,
        prevention_type: i32,
        stance_bar_order: i32,
        min_faction_id: i32,
        min_reputation: i32,
        required_aura_vision: i32,
        area_id: u32,
        school_mask: i32,
        rune_cost_id: u32,
        spell_missile_id: u32,
        power_display_id: u32,
        spell_description_variable_id: u32,
        spell_difficulty_id: u32,
        is_server_side: u32,
        attributes_serverside: i32,
        reagent1: i32,
        reagent_count1: u32,
        reagent2: i32,
        reagent_count2: u32,
        reagent3: i32,
        reagent_count3: u32,
        reagent4: i32,
        reagent_count4: u32,
        reagent5: i32,
        reagent_count5: u32,
        reagent6: i32,
        reagent_count6: u32,
        reagent7: i32,
        reagent_count7: u32,
        reagent8: i32,
        reagent_count8: u32,
        effect1: i32,
        effect_die_sides1: i32,
        effect_real_points_per_level1: f32,
        effect_base_points1: i32,
        effect_mechanic1: i32,
        effect_implicit_target_a1: i32,
        effect_implicit_target_b1: i32,
        effect_radius_index1: i32,
        effect_apply_aura_name1: i32,
        effect_amplitude1: i32,
        effect_multiple_value1: f32,
        effect_chain_target1: i32,
        effect_item_type1: u32,
        effect_misc_value1: i32,
        effect_misc_value_b1: i32,
        effect_trigger_spell1: u32,
        effect_points_per_combo_point1: f32,
        effect_spell_class_mask1_1: u32,
        effect_spell_class_mask1_2: u32,
        effect_spell_class_mask1_3: u32,
        dmg_multiplier1: f32,
        effect_bonus_coefficient1: f32,
        effect2: i32,
        effect_die_sides2: i32,
        effect_real_points_per_level2: f32,
        effect_base_points2: i32,
        effect_mechanic2: i32,
        effect_implicit_target_a2: i32,
        effect_implicit_target_b2: i32,
        effect_radius_index2: i32,
        effect_apply_aura_name2: i32,
        effect_amplitude2: i32,
        effect_multiple_value2: f32,
        effect_chain_target2: i32,
        effect_item_type2: u32,
        effect_misc_value2: i32,
        effect_misc_value_b2: i32,
        effect_trigger_spell2: u32,
        effect_points_per_combo_point2: f32,
        effect_spell_class_mask2_1: u32,
        effect_spell_class_mask2_2: u32,
        effect_spell_class_mask2_3: u32,
        dmg_multiplier2: f32,
        effect_bonus_coefficient2: f32,
        effect3: i32,
        effect_die_sides3: i32,
        effect_real_points_per_level3: f32,
        effect_base_points3: i32,
        effect_mechanic3: i32,
        effect_implicit_target_a3: i32,
        effect_implicit_target_b3: i32,
        effect_radius_index3: i32,
        effect_apply_aura_name3: i32,
        effect_amplitude3: i32,
        effect_multiple_value3: f32,
        effect_chain_target3: i32,
        effect_item_type3: u32,
        effect_misc_value3: i32,
        effect_misc_value_b3: i32,
        effect_trigger_spell3: u32,
        effect_points_per_combo_point3: f32,
        effect_spell_class_mask3_1: u32,
        effect_spell_class_mask3_2: u32,
        effect_spell_class_mask3_3: u32,
        dmg_multiplier3: f32,
        effect_bonus_coefficient3: f32,
        totem1: i32,
        totem2: i32,
        totem_category1: i32,
        totem_category2: i32,
    ) -> Self {
        Self {
            entry,
            category,
            dispel,
            mechanic,
            attributes,
            attributes_ex,
            attributes_ex2,
            attributes_ex3,
            attributes_ex4,
            attributes_ex5,
            attributes_ex6,
            attributes_ex7,
            stances,
            stances2,
            stances_not,
            stances_not2,
            targets,
            target_creature_type,
            requires_spell_focus,
            facing_caster_flags,
            caster_aura_state,
            target_aura_state,
            caster_aura_state_not,
            target_aura_state_not,
            caster_aura_spell,
            target_aura_spell,
            exclude_caster_aura_spell,
            exclude_target_aura_spell,
            casting_time_index,
            recovery_time,
            category_recovery_time,
            interrupt_flags,
            aura_interrupt_flags,
            channel_interrupt_flags,
            proc_flags,
            proc_chance,
            proc_charges,
            max_level,
            base_level,
            spell_level,
            duration_index,
            power_type,
            mana_cost,
            mana_cost_per_level,
            mana_per_second,
            mana_per_second_per_level,
            range_index,
            speed,
            modal_next_spell,
            stack_amount,
            equipped_item_class,
            equipped_item_sub_class_mask,
            equipped_item_inventory_type_mask,
            spell_visual,
            spell_visual2,
            spell_icon_id,
            active_icon_id,
            spell_priority,
            spell_name,
            spell_name2,
            spell_name3,
            spell_name4,
            spell_name5,
            spell_name6,
            spell_name7,
            spell_name8,
            spell_name9,
            spell_name10,
            spell_name11,
            spell_name12,
            spell_name13,
            spell_name14,
            spell_name15,
            spell_name16,
            rank1,
            rank2,
            rank3,
            rank4,
            rank5,
            rank6,
            rank7,
            rank8,
            rank9,
            rank10,
            rank11,
            rank12,
            rank13,
            rank14,
            rank15,
            rank16,
            mana_cost_percentage,
            start_recovery_category,
            start_recovery_time,
            max_target_level,
            spell_family_name,
            spell_family_flags,
            spell_family_flags2,
            max_affected_targets,
            dmg_class,
            prevention_type,
            stance_bar_order,
            min_faction_id,
            min_reputation,
            required_aura_vision,
            area_id,
            school_mask,
            rune_cost_id,
            spell_missile_id,
            power_display_id,
            spell_description_variable_id,
            spell_difficulty_id,
            is_server_side,
            attributes_serverside,
            reagents: [
            Reagent::new(
            reagent1,
            reagent_count1,
            ),
            Reagent::new(
            reagent2,
            reagent_count2,
            ),
            Reagent::new(
            reagent3,
            reagent_count3,
            ),
            Reagent::new(
            reagent4,
            reagent_count4,
            ),
            Reagent::new(
            reagent5,
            reagent_count5,
            ),
            Reagent::new(
            reagent6,
            reagent_count6,
            ),
            Reagent::new(
            reagent7,
            reagent_count7,
            ),
            Reagent::new(
            reagent8,
            reagent_count8,
            ),
            ],
            effects: [
            SpellEffect::new(
            effect1,
            effect_die_sides1,
            effect_real_points_per_level1,
            effect_base_points1,
            effect_mechanic1,
            effect_implicit_target_a1,
            effect_implicit_target_b1,
            effect_radius_index1,
            effect_apply_aura_name1,
            effect_amplitude1,
            effect_multiple_value1,
            effect_chain_target1,
            effect_item_type1,
            effect_misc_value1,
            effect_misc_value_b1,
            effect_trigger_spell1,
            effect_points_per_combo_point1,
            effect_spell_class_mask1_1,
            effect_spell_class_mask1_2,
            effect_spell_class_mask1_3,
            dmg_multiplier1,
            effect_bonus_coefficient1,
            ),
            SpellEffect::new(
            effect2,
            effect_die_sides2,
            effect_real_points_per_level2,
            effect_base_points2,
            effect_mechanic2,
            effect_implicit_target_a2,
            effect_implicit_target_b2,
            effect_radius_index2,
            effect_apply_aura_name2,
            effect_amplitude2,
            effect_multiple_value2,
            effect_chain_target2,
            effect_item_type2,
            effect_misc_value2,
            effect_misc_value_b2,
            effect_trigger_spell2,
            effect_points_per_combo_point2,
            effect_spell_class_mask2_1,
            effect_spell_class_mask2_2,
            effect_spell_class_mask2_3,
            dmg_multiplier2,
            effect_bonus_coefficient2,
            ),
            SpellEffect::new(
            effect3,
            effect_die_sides3,
            effect_real_points_per_level3,
            effect_base_points3,
            effect_mechanic3,
            effect_implicit_target_a3,
            effect_implicit_target_b3,
            effect_radius_index3,
            effect_apply_aura_name3,
            effect_amplitude3,
            effect_multiple_value3,
            effect_chain_target3,
            effect_item_type3,
            effect_misc_value3,
            effect_misc_value_b3,
            effect_trigger_spell3,
            effect_points_per_combo_point3,
            effect_spell_class_mask3_1,
            effect_spell_class_mask3_2,
            effect_spell_class_mask3_3,
            dmg_multiplier3,
            effect_bonus_coefficient3,
            ),
            ],
            totems: [
            Totem::new(
            totem1,
            ),
            Totem::new(
            totem2,
            ),
            ],
            totem_categories: [
            TotemCategory::new(
            totem_category1,
            ),
            TotemCategory::new(
            totem_category2,
            ),
            ],
        }
    }
}
#[derive(Debug, Copy, Clone)]
pub struct Reagent {
    pub reagent: i32,
    pub amount: u32,
}

impl Reagent {
    pub const fn new(
        reagent: i32,
        amount: u32,
    ) -> Self {
        Self {
            reagent,
            amount,
        }
    }
}
#[derive(Debug, Copy, Clone)]
pub struct SpellEffect {
    pub effect: i32,
    pub die_sides: i32,
    pub real_points_per_level: f32,
    pub base_points: i32,
    pub mechanics: i32,
    pub implicit_target_a: i32,
    pub implicit_target_b: i32,
    pub radius_index: i32,
    pub apply_aura_name: i32,
    pub amplitude: i32,
    pub multiple_value: f32,
    pub chain_target: i32,
    pub item_type: u32,
    pub misc_value: i32,
    pub misc_value_b: i32,
    pub trigger_spell: u32,
    pub points_per_combo_point: f32,
    pub spell_class_mask1: u32,
    pub spell_class_mask2: u32,
    pub spell_class_mask3: u32,
    pub damage_multiplier: f32,
    pub bonus_coefficient: f32,
}

impl SpellEffect {
    pub const fn new(
        effect: i32,
        die_sides: i32,
        real_points_per_level: f32,
        base_points: i32,
        mechanics: i32,
        implicit_target_a: i32,
        implicit_target_b: i32,
        radius_index: i32,
        apply_aura_name: i32,
        amplitude: i32,
        multiple_value: f32,
        chain_target: i32,
        item_type: u32,
        misc_value: i32,
        misc_value_b: i32,
        trigger_spell: u32,
        points_per_combo_point: f32,
        spell_class_mask1: u32,
        spell_class_mask2: u32,
        spell_class_mask3: u32,
        damage_multiplier: f32,
        bonus_coefficient: f32,
    ) -> Self {
        Self {
            effect,
            die_sides,
            real_points_per_level,
            base_points,
            mechanics,
            implicit_target_a,
            implicit_target_b,
            radius_index,
            apply_aura_name,
            amplitude,
            multiple_value,
            chain_target,
            item_type,
            misc_value,
            misc_value_b,
            trigger_spell,
            points_per_combo_point,
            spell_class_mask1,
            spell_class_mask2,
            spell_class_mask3,
            damage_multiplier,
            bonus_coefficient,
        }
    }
}
#[derive(Debug, Copy, Clone)]
pub struct Totem {
    pub totem: i32,
}

impl Totem {
    pub const fn new(
        totem: i32,
    ) -> Self {
        Self {
            totem,
        }
    }
}
#[derive(Debug, Copy, Clone)]
pub struct TotemCategory {
    pub category: i32,
}

impl TotemCategory {
    pub const fn new(
        category: i32,
    ) -> Self {
        Self {
            category,
        }
    }
}
// AUTOGENERATED_END
