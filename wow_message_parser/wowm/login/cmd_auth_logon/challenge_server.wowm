slogin CMD_AUTH_LOGON_CHALLENGE_Server = 0x00 {
    u8 protocol_version = 0;

    LoginResult login_result;
    if (login_result == SUCCESS) {
        u8[32] server_public_key;
        u8 generator_length;
        u8[generator_length] generator;
        u8 large_safe_prime_length;
        u8[large_safe_prime_length] large_safe_prime;
        u8[32] salt;
        u8[16] crc_salt;
    }
} {
    login_logon_versions = "2";
}

test CMD_AUTH_LOGON_CHALLENGE_Server {
    login_result = SUCCESS;

    server_public_key = [ 0x49, 0xd8, 0xc2, 0xbc, 0x68, 0x5c, 0x2b, 0xce, 0x4a, 0xf4, 0xfa, 0x07,
        0x0a, 0x47, 0x93, 0x78, 0x58, 0x78, 0x46, 0xb5, 0x83, 0xd4, 0x41, 0x82, 0x9e, 0x24,
        0xd8, 0x87, 0xce, 0xda, 0x34, 0x46, ];

    generator = [ 7 ];

    large_safe_prime = [ 0xb7, 0x9b, 0x3e, 0x2a, 0x87, 0x82, 0x3c, 0xab, 0x8f, 0x5e, 0xbf,
                         0xbf, 0x8e, 0xb1, 0x01, 0x08, 0x53, 0x50, 0x06, 0x29, 0x8b, 0x5b,
                         0xad, 0xbd, 0x5b, 0x53, 0xe1, 0x89, 0x5e, 0x64, 0x4b, 0x89, ];

    salt = [ 0xc7, 0x09, 0x87, 0x7d, 0x8c, 0x65, 0x52, 0x66, 0xa5, 0x7d, 
             0xb8, 0x65, 0x3d, 0x6e, 0xa6, 0x2b, 0xb5, 0x54, 0xf2, 0x0b, 
             0xcf, 0x74, 0xd6, 0x4a, 0x77, 0xa7, 0xd3, 0x3d, 0xf3, 0x30, 
             0x90, 0x87, ];

    crc_salt = [ 0xba, 0xa3, 0x1e, 0x99, 0xa0, 0x0b, 0x21, 0x57, 0xfc, 0x37, 
                 0x3f, 0xb3, 0x69, 0xcd, 0xd2, 0xf1, ];
} [
    0x00, /* Opcode: CMD_AUTH_LOGON_CHALLENGE */
    0x00, /* Protocol Version: 0 */
    0x00, /* Result: SUCCESS (0) */

    0x49, 0xd8, 0xc2, 0xbc, 0x68, 0x5c, 0x2b, 0xce, 0x4a, 0xf4, 0xfa, 0x07,
    0x0a, 0x47, 0x93, 0x78, 0x58, 0x78, 0x46, 0xb5, 0x83, 0xd4, 0x41, 0x82, 0x9e, 0x24,
    0xd8, 0x87, 0xce, 0xda, 0x34, 0x46, /* Server Public Key */

    0x01, /* Generator Length: 1 */
    0x07, /* Generator: 7 */
    0x20, /* Large Safe Prime Length: 32 */

    0xb7, 0x9b, 0x3e, 0x2a, 0x87, 0x82, 0x3c, 0xab, 0x8f, 0x5e, 
    0xbf, 0xbf, 0x8e, 0xb1, 0x01, 0x08, 0x53, 0x50, 0x06, 0x29, 
    0x8b, 0x5b, 0xad, 0xbd, 0x5b, 0x53, 0xe1, 0x89, 0x5e, 0x64, 
    0x4b, 0x89, /* Large Safe Prime */

    0xc7, 0x09, 0x87, 0x7d, 0x8c, 0x65, 0x52, 0x66, 0xa5, 0x7d, 
    0xb8, 0x65, 0x3d, 0x6e, 0xa6, 0x2b, 0xb5, 0x54, 0xf2, 0x0b, 
    0xcf, 0x74, 0xd6, 0x4a, 0x77, 0xa7, 0xd3, 0x3d, 0xf3, 0x30, 
    0x90, 0x87, /* Salt */

    0xba, 0xa3, 0x1e, 0x99, 0xa0, 0x0b, 0x21, 0x57, 0xfc, 0x37, 
    0x3f, 0xb3, 0x69, 0xcd, 0xd2, 0xf1, /* CRC Salt */
] {
    login_logon_versions = "2";
}

slogin CMD_AUTH_LOGON_CHALLENGE_Server = 0x00 {
    u8 protocol_version = 0;

    LoginResult login_result;
    if (login_result == SUCCESS) {
        u8[32] server_public_key;
        u8 generator_length;
        u8[generator_length] generator;
        u8 large_safe_prime_length;
        u8[large_safe_prime_length] large_safe_prime;
        u8[32] salt;
        u8[16] crc_salt;

        SecurityFlag security_flag;
        if (security_flag == PIN) {
            u32 pin_grid_seed;
            u8[16] pin_salt;
        }
    }
} {
    login_logon_versions = "3";
}

test CMD_AUTH_LOGON_CHALLENGE_Server {
    login_result = SUCCESS;

    server_public_key = [ 0x49, 0xd8, 0xc2, 0xbc, 0x68, 0x5c, 0x2b, 0xce, 0x4a, 0xf4, 0xfa, 0x07,
        0x0a, 0x47, 0x93, 0x78, 0x58, 0x78, 0x46, 0xb5, 0x83, 0xd4, 0x41, 0x82, 0x9e, 0x24,
        0xd8, 0x87, 0xce, 0xda, 0x34, 0x46, ];

    generator = [ 7 ];

    large_safe_prime = [ 0xb7, 0x9b, 0x3e, 0x2a, 0x87, 0x82, 0x3c, 0xab, 0x8f, 0x5e, 0xbf,
                         0xbf, 0x8e, 0xb1, 0x01, 0x08, 0x53, 0x50, 0x06, 0x29, 0x8b, 0x5b,
                         0xad, 0xbd, 0x5b, 0x53, 0xe1, 0x89, 0x5e, 0x64, 0x4b, 0x89, ];

    salt = [ 0xc7, 0x09, 0x87, 0x7d, 0x8c, 0x65, 0x52, 0x66, 0xa5, 0x7d,
             0xb8, 0x65, 0x3d, 0x6e, 0xa6, 0x2b, 0xb5, 0x54, 0xf2, 0x0b,
             0xcf, 0x74, 0xd6, 0x4a, 0x77, 0xa7, 0xd3, 0x3d, 0xf3, 0x30,
             0x90, 0x87, ];

    crc_salt = [ 0xba, 0xa3, 0x1e, 0x99, 0xa0, 0x0b, 0x21, 0x57, 0xfc, 0x37, 
                 0x3f, 0xb3, 0x69, 0xcd, 0xd2, 0xf1, ];

    security_flag = PIN;
    pin_grid_seed = 0xDEADBEEF;
    pin_salt = [ 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09,
                 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, ];
} [
    0x00, /* Opcode: CMD_AUTH_LOGON_CHALLENGE */
    0x00, /* Protocol Version: 0 */
    0x00, /* Result: SUCCESS (0) */

    0x49, 0xd8, 0xc2, 0xbc, 0x68, 0x5c, 0x2b, 0xce, 0x4a, 0xf4, 0xfa, 0x07,
    0x0a, 0x47, 0x93, 0x78, 0x58, 0x78, 0x46, 0xb5, 0x83, 0xd4, 0x41, 0x82, 0x9e, 0x24,
    0xd8, 0x87, 0xce, 0xda, 0x34, 0x46, /* Server Public Key */

    0x01, /* Generator Length: 1 */
    0x07, /* Generator: 7 */
    0x20, /* Large Safe Prime Length: 32 */

    0xb7, 0x9b, 0x3e, 0x2a, 0x87, 0x82, 0x3c, 0xab, 0x8f, 0x5e, 
    0xbf, 0xbf, 0x8e, 0xb1, 0x01, 0x08, 0x53, 0x50, 0x06, 0x29, 
    0x8b, 0x5b, 0xad, 0xbd, 0x5b, 0x53, 0xe1, 0x89, 0x5e, 0x64, 
    0x4b, 0x89, /* Large Safe Prime */

    0xc7, 0x09, 0x87, 0x7d, 0x8c, 0x65, 0x52, 0x66, 0xa5, 0x7d, 
    0xb8, 0x65, 0x3d, 0x6e, 0xa6, 0x2b, 0xb5, 0x54, 0xf2, 0x0b, 
    0xcf, 0x74, 0xd6, 0x4a, 0x77, 0xa7, 0xd3, 0x3d, 0xf3, 0x30, 
    0x90, 0x87, /* Salt */

    0xba, 0xa3, 0x1e, 0x99, 0xa0, 0x0b, 0x21, 0x57, 0xfc, 0x37, 
    0x3f, 0xb3, 0x69, 0xcd, 0xd2, 0xf1, /* CRC Salt */

    0x01, /* Two factor fields enabled: True */
    0xEF, 0xBE, 0xAD, 0xDE, /* PIN grid seed: 0xDEADBEEF */

    0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09,
    0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, /* PIN salt */
] {
    login_logon_versions = "3";
}

test CMD_AUTH_LOGON_CHALLENGE_Server {
    login_result = SUCCESS;

    server_public_key = [ 0x49, 0xd8, 0xc2, 0xbc, 0x68, 0x5c, 0x2b, 0xce, 0x4a, 0xf4, 0xfa, 0x07,
        0x0a, 0x47, 0x93, 0x78, 0x58, 0x78, 0x46, 0xb5, 0x83, 0xd4, 0x41, 0x82, 0x9e, 0x24,
        0xd8, 0x87, 0xce, 0xda, 0x34, 0x46, ];

    generator = [ 7 ];

    large_safe_prime = [ 0xb7, 0x9b, 0x3e, 0x2a, 0x87, 0x82, 0x3c, 0xab, 0x8f, 0x5e, 0xbf,
                         0xbf, 0x8e, 0xb1, 0x01, 0x08, 0x53, 0x50, 0x06, 0x29, 0x8b, 0x5b,
                         0xad, 0xbd, 0x5b, 0x53, 0xe1, 0x89, 0x5e, 0x64, 0x4b, 0x89, ];

    salt = [ 0xc7, 0x09, 0x87, 0x7d, 0x8c, 0x65, 0x52, 0x66, 0xa5, 0x7d,
             0xb8, 0x65, 0x3d, 0x6e, 0xa6, 0x2b, 0xb5, 0x54, 0xf2, 0x0b,
             0xcf, 0x74, 0xd6, 0x4a, 0x77, 0xa7, 0xd3, 0x3d, 0xf3, 0x30,
             0x90, 0x87, ];

    crc_salt = [ 0xba, 0xa3, 0x1e, 0x99, 0xa0, 0x0b, 0x21, 0x57, 0xfc, 0x37, 
                 0x3f, 0xb3, 0x69, 0xcd, 0xd2, 0xf1, ];

    security_flag = NONE;
} [
    0x00, /* Opcode: CMD_AUTH_LOGON_CHALLENGE */
    0x00, /* Protocol Version: 0 */
    0x00, /* Result: SUCCESS (0) */

    0x49, 0xd8, 0xc2, 0xbc, 0x68, 0x5c, 0x2b, 0xce, 0x4a, 0xf4, 0xfa, 0x07,
    0x0a, 0x47, 0x93, 0x78, 0x58, 0x78, 0x46, 0xb5, 0x83, 0xd4, 0x41, 0x82, 0x9e, 0x24,
    0xd8, 0x87, 0xce, 0xda, 0x34, 0x46, /* Server Public Key */

    0x01, /* Generator Length: 1 */
    0x07, /* Generator: 7 */
    0x20, /* Large Safe Prime Length: 32 */

    0xb7, 0x9b, 0x3e, 0x2a, 0x87, 0x82, 0x3c, 0xab, 0x8f, 0x5e, 
    0xbf, 0xbf, 0x8e, 0xb1, 0x01, 0x08, 0x53, 0x50, 0x06, 0x29, 
    0x8b, 0x5b, 0xad, 0xbd, 0x5b, 0x53, 0xe1, 0x89, 0x5e, 0x64, 
    0x4b, 0x89, /* Large Safe Prime */

    0xc7, 0x09, 0x87, 0x7d, 0x8c, 0x65, 0x52, 0x66, 0xa5, 0x7d, 
    0xb8, 0x65, 0x3d, 0x6e, 0xa6, 0x2b, 0xb5, 0x54, 0xf2, 0x0b, 
    0xcf, 0x74, 0xd6, 0x4a, 0x77, 0xa7, 0xd3, 0x3d, 0xf3, 0x30, 
    0x90, 0x87, /* Salt */

    0xba, 0xa3, 0x1e, 0x99, 0xa0, 0x0b, 0x21, 0x57, 0xfc, 0x37, 
    0x3f, 0xb3, 0x69, 0xcd, 0xd2, 0xf1, /* CRC Salt */

    0x00, /* Two factor fields enabled: False */
] {
    login_logon_versions = "3";
}

slogin CMD_AUTH_LOGON_CHALLENGE_Server = 0x00 {
    u8 protocol_version = 0;

    LoginResult login_result;
    if (login_result == SUCCESS) {
        u8[32] server_public_key;
        u8 generator_length;
        u8[generator_length] generator;
        u8 large_safe_prime_length;
        u8[large_safe_prime_length] large_safe_prime;
        u8[32] salt;
        u8[16] crc_salt;

        SecurityFlag security_flag;
        if (security_flag & PIN) {
            u32 pin_grid_seed;
            u8[16] pin_salt;
        }
        if (security_flag & UNKNOWN0) {
            u8 unknown0;
            u8 unknown1;
            u8 unknown2;
            u8 unknown3;
            u64 unknown4;
        }
        if (security_flag & AUTHENTICATOR) {
            u8 unknown5 = 1;
        }
    }
} {
    login_logon_versions = "8";
}

test CMD_AUTH_LOGON_CHALLENGE_Server {
    login_result = SUCCESS;

    server_public_key = [ 0x49, 0xd8, 0xc2, 0xbc, 0x68, 0x5c, 0x2b, 0xce, 0x4a, 0xf4, 0xfa, 0x07,
        0x0a, 0x47, 0x93, 0x78, 0x58, 0x78, 0x46, 0xb5, 0x83, 0xd4, 0x41, 0x82, 0x9e, 0x24,
        0xd8, 0x87, 0xce, 0xda, 0x34, 0x46, ];

    generator = [ 7 ];

    large_safe_prime = [ 0xb7, 0x9b, 0x3e, 0x2a, 0x87, 0x82, 0x3c, 0xab, 0x8f, 0x5e, 0xbf,
                         0xbf, 0x8e, 0xb1, 0x01, 0x08, 0x53, 0x50, 0x06, 0x29, 0x8b, 0x5b,
                         0xad, 0xbd, 0x5b, 0x53, 0xe1, 0x89, 0x5e, 0x64, 0x4b, 0x89, ];

    salt = [ 0xc7, 0x09, 0x87, 0x7d, 0x8c, 0x65, 0x52, 0x66, 0xa5, 0x7d,
             0xb8, 0x65, 0x3d, 0x6e, 0xa6, 0x2b, 0xb5, 0x54, 0xf2, 0x0b,
             0xcf, 0x74, 0xd6, 0x4a, 0x77, 0xa7, 0xd3, 0x3d, 0xf3, 0x30,
             0x90, 0x87, ];

    crc_salt = [ 0xba, 0xa3, 0x1e, 0x99, 0xa0, 0x0b, 0x21, 0x57, 0xfc, 0x37,
                 0x3f, 0xb3, 0x69, 0xcd, 0xd2, 0xf1, ];

    security_flag = NONE;
} [
    0x00, /* Opcode: CMD_AUTH_LOGON_CHALLENGE */
    0x00, /* Protocol Version: 0 */
    0x00, /* Result: SUCCESS (0) */

    0x49, 0xd8, 0xc2, 0xbc, 0x68, 0x5c, 0x2b, 0xce, 0x4a, 0xf4, 0xfa, 0x07,
    0x0a, 0x47, 0x93, 0x78, 0x58, 0x78, 0x46, 0xb5, 0x83, 0xd4, 0x41, 0x82, 0x9e, 0x24,
    0xd8, 0x87, 0xce, 0xda, 0x34, 0x46, /* Server Public Key */

    0x01, /* Generator Length: 1 */
    0x07, /* Generator: 7 */
    0x20, /* Large Safe Prime Length: 32 */

    0xb7, 0x9b, 0x3e, 0x2a, 0x87, 0x82, 0x3c, 0xab, 0x8f, 0x5e,
    0xbf, 0xbf, 0x8e, 0xb1, 0x01, 0x08, 0x53, 0x50, 0x06, 0x29,
    0x8b, 0x5b, 0xad, 0xbd, 0x5b, 0x53, 0xe1, 0x89, 0x5e, 0x64,
    0x4b, 0x89, /* Large Safe Prime */

    0xc7, 0x09, 0x87, 0x7d, 0x8c, 0x65, 0x52, 0x66, 0xa5, 0x7d,
    0xb8, 0x65, 0x3d, 0x6e, 0xa6, 0x2b, 0xb5, 0x54, 0xf2, 0x0b,
    0xcf, 0x74, 0xd6, 0x4a, 0x77, 0xa7, 0xd3, 0x3d, 0xf3, 0x30,
    0x90, 0x87, /* Salt */

    0xba, 0xa3, 0x1e, 0x99, 0xa0, 0x0b, 0x21, 0x57, 0xfc, 0x37,
    0x3f, 0xb3, 0x69, 0xcd, 0xd2, 0xf1, /* CRC Salt */

    0x00, /* Two factor fields enabled: False */
] {
    login_logon_versions = "8";
}

test CMD_AUTH_LOGON_CHALLENGE_Server {
    login_result = SUCCESS;

    server_public_key = [ 0x49, 0xd8, 0xc2, 0xbc, 0x68, 0x5c, 0x2b, 0xce, 0x4a, 0xf4, 0xfa, 0x07,
        0x0a, 0x47, 0x93, 0x78, 0x58, 0x78, 0x46, 0xb5, 0x83, 0xd4, 0x41, 0x82, 0x9e, 0x24,
        0xd8, 0x87, 0xce, 0xda, 0x34, 0x46, ];

    generator = [ 7 ];

    large_safe_prime = [ 0xb7, 0x9b, 0x3e, 0x2a, 0x87, 0x82, 0x3c, 0xab, 0x8f, 0x5e, 0xbf,
                         0xbf, 0x8e, 0xb1, 0x01, 0x08, 0x53, 0x50, 0x06, 0x29, 0x8b, 0x5b,
                         0xad, 0xbd, 0x5b, 0x53, 0xe1, 0x89, 0x5e, 0x64, 0x4b, 0x89, ];

    salt = [ 0xc7, 0x09, 0x87, 0x7d, 0x8c, 0x65, 0x52, 0x66, 0xa5, 0x7d,
             0xb8, 0x65, 0x3d, 0x6e, 0xa6, 0x2b, 0xb5, 0x54, 0xf2, 0x0b,
             0xcf, 0x74, 0xd6, 0x4a, 0x77, 0xa7, 0xd3, 0x3d, 0xf3, 0x30,
             0x90, 0x87, ];

    crc_salt = [ 0xba, 0xa3, 0x1e, 0x99, 0xa0, 0x0b, 0x21, 0x57, 0xfc, 0x37, 
                 0x3f, 0xb3, 0x69, 0xcd, 0xd2, 0xf1, ];

    security_flag = PIN;
    pin_grid_seed = 0xDEADBEEF;
    pin_salt = [ 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 
                        0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, ];
} [
    0x00, /* Opcode: CMD_AUTH_LOGON_CHALLENGE */
    0x00, /* Protocol Version: 0 */
    0x00, /* Result: SUCCESS (0) */

    0x49, 0xd8, 0xc2, 0xbc, 0x68, 0x5c, 0x2b, 0xce, 0x4a, 0xf4, 0xfa, 0x07,
    0x0a, 0x47, 0x93, 0x78, 0x58, 0x78, 0x46, 0xb5, 0x83, 0xd4, 0x41, 0x82, 0x9e, 0x24,
    0xd8, 0x87, 0xce, 0xda, 0x34, 0x46, /* Server Public Key */

    0x01, /* Generator Length: 1 */
    0x07, /* Generator: 7 */
    0x20, /* Large Safe Prime Length: 32 */

    0xb7, 0x9b, 0x3e, 0x2a, 0x87, 0x82, 0x3c, 0xab, 0x8f, 0x5e, 
    0xbf, 0xbf, 0x8e, 0xb1, 0x01, 0x08, 0x53, 0x50, 0x06, 0x29, 
    0x8b, 0x5b, 0xad, 0xbd, 0x5b, 0x53, 0xe1, 0x89, 0x5e, 0x64, 
    0x4b, 0x89, /* Large Safe Prime */

    0xc7, 0x09, 0x87, 0x7d, 0x8c, 0x65, 0x52, 0x66, 0xa5, 0x7d, 
    0xb8, 0x65, 0x3d, 0x6e, 0xa6, 0x2b, 0xb5, 0x54, 0xf2, 0x0b, 
    0xcf, 0x74, 0xd6, 0x4a, 0x77, 0xa7, 0xd3, 0x3d, 0xf3, 0x30, 
    0x90, 0x87, /* Salt */

    0xba, 0xa3, 0x1e, 0x99, 0xa0, 0x0b, 0x21, 0x57, 0xfc, 0x37, 
    0x3f, 0xb3, 0x69, 0xcd, 0xd2, 0xf1, /* CRC Salt */

    0x01, /* Two factor fields enabled: PIN */
    0xEF, 0xBE, 0xAD, 0xDE, /* PIN grid seed: 0xDEADBEEF */

    0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09,
    0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, /* PIN salt */
] {
    login_logon_versions = "8";
}

test CMD_AUTH_LOGON_CHALLENGE_Server {
    login_result = SUCCESS;

    server_public_key = [ 0x49, 0xd8, 0xc2, 0xbc, 0x68, 0x5c, 0x2b, 0xce, 0x4a, 0xf4, 0xfa, 0x07,
        0x0a, 0x47, 0x93, 0x78, 0x58, 0x78, 0x46, 0xb5, 0x83, 0xd4, 0x41, 0x82, 0x9e, 0x24,
        0xd8, 0x87, 0xce, 0xda, 0x34, 0x46, ];

    generator = [ 7 ];

    large_safe_prime = [ 0xb7, 0x9b, 0x3e, 0x2a, 0x87, 0x82, 0x3c, 0xab, 0x8f, 0x5e, 0xbf,
                         0xbf, 0x8e, 0xb1, 0x01, 0x08, 0x53, 0x50, 0x06, 0x29, 0x8b, 0x5b,
                         0xad, 0xbd, 0x5b, 0x53, 0xe1, 0x89, 0x5e, 0x64, 0x4b, 0x89, ];

    salt = [ 0xc7, 0x09, 0x87, 0x7d, 0x8c, 0x65, 0x52, 0x66, 0xa5, 0x7d,
             0xb8, 0x65, 0x3d, 0x6e, 0xa6, 0x2b, 0xb5, 0x54, 0xf2, 0x0b,
             0xcf, 0x74, 0xd6, 0x4a, 0x77, 0xa7, 0xd3, 0x3d, 0xf3, 0x30,
             0x90, 0x87, ];

    crc_salt = [ 0xba, 0xa3, 0x1e, 0x99, 0xa0, 0x0b, 0x21, 0x57, 0xfc, 0x37,
                 0x3f, 0xb3, 0x69, 0xcd, 0xd2, 0xf1, ];

    security_flag = AUTHENTICATOR;
    unknown5 = 1;
} [
    0x00, /* Opcode: CMD_AUTH_LOGON_CHALLENGE */
    0x00, /* Protocol Version: 0 */
    0x00, /* Result: SUCCESS (0) */

    0x49, 0xd8, 0xc2, 0xbc, 0x68, 0x5c, 0x2b, 0xce, 0x4a, 0xf4, 0xfa, 0x07,
    0x0a, 0x47, 0x93, 0x78, 0x58, 0x78, 0x46, 0xb5, 0x83, 0xd4, 0x41, 0x82, 0x9e, 0x24,
    0xd8, 0x87, 0xce, 0xda, 0x34, 0x46, /* Server Public Key */

    0x01, /* Generator Length: 1 */
    0x07, /* Generator: 7 */
    0x20, /* Large Safe Prime Length: 32 */

    0xb7, 0x9b, 0x3e, 0x2a, 0x87, 0x82, 0x3c, 0xab, 0x8f, 0x5e,
    0xbf, 0xbf, 0x8e, 0xb1, 0x01, 0x08, 0x53, 0x50, 0x06, 0x29,
    0x8b, 0x5b, 0xad, 0xbd, 0x5b, 0x53, 0xe1, 0x89, 0x5e, 0x64,
    0x4b, 0x89, /* Large Safe Prime */

    0xc7, 0x09, 0x87, 0x7d, 0x8c, 0x65, 0x52, 0x66, 0xa5, 0x7d,
    0xb8, 0x65, 0x3d, 0x6e, 0xa6, 0x2b, 0xb5, 0x54, 0xf2, 0x0b,
    0xcf, 0x74, 0xd6, 0x4a, 0x77, 0xa7, 0xd3, 0x3d, 0xf3, 0x30,
    0x90, 0x87, /* Salt */

    0xba, 0xa3, 0x1e, 0x99, 0xa0, 0x0b, 0x21, 0x57, 0xfc, 0x37,
    0x3f, 0xb3, 0x69, 0xcd, 0xd2, 0xf1, /* CRC Salt */

    0x04, /* Two factor fields enabled: AUTHENTICATOR */
    0x01, /* unknown5 */
] {
    login_logon_versions = "8";
}

test CMD_AUTH_LOGON_CHALLENGE_Server {
    login_result = SUCCESS;

    server_public_key = [ 0x49, 0xd8, 0xc2, 0xbc, 0x68, 0x5c, 0x2b, 0xce, 0x4a, 0xf4, 0xfa, 0x07,
        0x0a, 0x47, 0x93, 0x78, 0x58, 0x78, 0x46, 0xb5, 0x83, 0xd4, 0x41, 0x82, 0x9e, 0x24,
        0xd8, 0x87, 0xce, 0xda, 0x34, 0x46, ];

    generator = [ 7 ];

    large_safe_prime = [ 0xb7, 0x9b, 0x3e, 0x2a, 0x87, 0x82, 0x3c, 0xab, 0x8f, 0x5e, 0xbf,
                         0xbf, 0x8e, 0xb1, 0x01, 0x08, 0x53, 0x50, 0x06, 0x29, 0x8b, 0x5b,
                         0xad, 0xbd, 0x5b, 0x53, 0xe1, 0x89, 0x5e, 0x64, 0x4b, 0x89, ];

    salt = [ 0xc7, 0x09, 0x87, 0x7d, 0x8c, 0x65, 0x52, 0x66, 0xa5, 0x7d,
             0xb8, 0x65, 0x3d, 0x6e, 0xa6, 0x2b, 0xb5, 0x54, 0xf2, 0x0b,
             0xcf, 0x74, 0xd6, 0x4a, 0x77, 0xa7, 0xd3, 0x3d, 0xf3, 0x30,
             0x90, 0x87, ];

    crc_salt = [ 0xba, 0xa3, 0x1e, 0x99, 0xa0, 0x0b, 0x21, 0x57, 0xfc, 0x37,
                 0x3f, 0xb3, 0x69, 0xcd, 0xd2, 0xf1, ];

    security_flag = UNKNOWN0;
    unknown0 = 0xFF;
    unknown1 = 0xEE;
    unknown2 = 0xDD;
    unknown3 = 0xCC;
    unknown4 = 0xDEADBEEFFACADE;
} [
    0x00, /* Opcode: CMD_AUTH_LOGON_CHALLENGE */
    0x00, /* Protocol Version: 0 */
    0x00, /* Result: SUCCESS (0) */

    0x49, 0xd8, 0xc2, 0xbc, 0x68, 0x5c, 0x2b, 0xce, 0x4a, 0xf4, 0xfa, 0x07,
    0x0a, 0x47, 0x93, 0x78, 0x58, 0x78, 0x46, 0xb5, 0x83, 0xd4, 0x41, 0x82, 0x9e, 0x24,
    0xd8, 0x87, 0xce, 0xda, 0x34, 0x46, /* Server Public Key */

    0x01, /* Generator Length: 1 */
    0x07, /* Generator: 7 */
    0x20, /* Large Safe Prime Length: 32 */

    0xb7, 0x9b, 0x3e, 0x2a, 0x87, 0x82, 0x3c, 0xab, 0x8f, 0x5e,
    0xbf, 0xbf, 0x8e, 0xb1, 0x01, 0x08, 0x53, 0x50, 0x06, 0x29,
    0x8b, 0x5b, 0xad, 0xbd, 0x5b, 0x53, 0xe1, 0x89, 0x5e, 0x64,
    0x4b, 0x89, /* Large Safe Prime */

    0xc7, 0x09, 0x87, 0x7d, 0x8c, 0x65, 0x52, 0x66, 0xa5, 0x7d,
    0xb8, 0x65, 0x3d, 0x6e, 0xa6, 0x2b, 0xb5, 0x54, 0xf2, 0x0b,
    0xcf, 0x74, 0xd6, 0x4a, 0x77, 0xa7, 0xd3, 0x3d, 0xf3, 0x30,
    0x90, 0x87, /* Salt */

    0xba, 0xa3, 0x1e, 0x99, 0xa0, 0x0b, 0x21, 0x57, 0xfc, 0x37,
    0x3f, 0xb3, 0x69, 0xcd, 0xd2, 0xf1, /* CRC Salt */

    0x02, /* Two factor fields enabled: UNKNOWN0 */
    0xFF, /* unknown0 */
    0xEE, /* unknown1 */
    0xDD, /* unknown2 */
    0xCC, /* unknown3 */
    0xDE, 0xCA, 0xFA, 0xEF, 0xBE, 0xAD, 0xDE, 0x00, /* unknown4 */
] {
    login_logon_versions = "8";
}

test CMD_AUTH_LOGON_CHALLENGE_Server {
    login_result = FAIL_INCORRECT_PASSWORD;
} [
    0x00, /* Opcode: CMD_AUTH_LOGON_CHALLENGE */
    0x00, /* Protocol Version: 0 */
    0x05, /* Result: FAIL_INCORRECT_PASSWORD (5) */
] {
    login_logon_versions = "8";
}

test CMD_AUTH_LOGON_CHALLENGE_Server {
    login_result = SUCCESS;

    server_public_key = [ 0x49, 0xd8, 0xc2, 0xbc, 0x68, 0x5c, 0x2b, 0xce, 0x4a, 0xf4, 0xfa, 0x07,
        0x0a, 0x47, 0x93, 0x78, 0x58, 0x78, 0x46, 0xb5, 0x83, 0xd4, 0x41, 0x82, 0x9e, 0x24,
        0xd8, 0x87, 0xce, 0xda, 0x34, 0x46, ];

    generator = [ 7 ];

    large_safe_prime = [ 0xb7, 0x9b, 0x3e, 0x2a, 0x87, 0x82, 0x3c, 0xab, 0x8f, 0x5e, 0xbf,
                         0xbf, 0x8e, 0xb1, 0x01, 0x08, 0x53, 0x50, 0x06, 0x29, 0x8b, 0x5b,
                         0xad, 0xbd, 0x5b, 0x53, 0xe1, 0x89, 0x5e, 0x64, 0x4b, 0x89, ];

    salt = [ 0xc7, 0x09, 0x87, 0x7d, 0x8c, 0x65, 0x52, 0x66, 0xa5, 0x7d,
             0xb8, 0x65, 0x3d, 0x6e, 0xa6, 0x2b, 0xb5, 0x54, 0xf2, 0x0b,
             0xcf, 0x74, 0xd6, 0x4a, 0x77, 0xa7, 0xd3, 0x3d, 0xf3, 0x30,
             0x90, 0x87, ];

    crc_salt = [ 0xba, 0xa3, 0x1e, 0x99, 0xa0, 0x0b, 0x21, 0x57, 0xfc, 0x37,
                 0x3f, 0xb3, 0x69, 0xcd, 0xd2, 0xf1, ];

    security_flag = UNKNOWN0 | AUTHENTICATOR;
    unknown0 = 0xFF;
    unknown1 = 0xEE;
    unknown2 = 0xDD;
    unknown3 = 0xCC;
    unknown4 = 0xDEADBEEFFACADE;

    unknown5 = 1;
} [
    0x00, /* Opcode: CMD_AUTH_LOGON_CHALLENGE */
    0x00, /* Protocol Version: 0 */
    0x00, /* Result: SUCCESS (0) */

    0x49, 0xd8, 0xc2, 0xbc, 0x68, 0x5c, 0x2b, 0xce, 0x4a, 0xf4, 0xfa, 0x07,
    0x0a, 0x47, 0x93, 0x78, 0x58, 0x78, 0x46, 0xb5, 0x83, 0xd4, 0x41, 0x82, 0x9e, 0x24,
    0xd8, 0x87, 0xce, 0xda, 0x34, 0x46, /* Server Public Key */

    0x01, /* Generator Length: 1 */
    0x07, /* Generator: 7 */
    0x20, /* Large Safe Prime Length: 32 */

    0xb7, 0x9b, 0x3e, 0x2a, 0x87, 0x82, 0x3c, 0xab, 0x8f, 0x5e,
    0xbf, 0xbf, 0x8e, 0xb1, 0x01, 0x08, 0x53, 0x50, 0x06, 0x29,
    0x8b, 0x5b, 0xad, 0xbd, 0x5b, 0x53, 0xe1, 0x89, 0x5e, 0x64,
    0x4b, 0x89, /* Large Safe Prime */

    0xc7, 0x09, 0x87, 0x7d, 0x8c, 0x65, 0x52, 0x66, 0xa5, 0x7d,
    0xb8, 0x65, 0x3d, 0x6e, 0xa6, 0x2b, 0xb5, 0x54, 0xf2, 0x0b,
    0xcf, 0x74, 0xd6, 0x4a, 0x77, 0xa7, 0xd3, 0x3d, 0xf3, 0x30,
    0x90, 0x87, /* Salt */

    0xba, 0xa3, 0x1e, 0x99, 0xa0, 0x0b, 0x21, 0x57, 0xfc, 0x37,
    0x3f, 0xb3, 0x69, 0xcd, 0xd2, 0xf1, /* CRC Salt */

    0x06, /* Two factor fields enabled: UNKNOWN0 */
    0xFF, /* unknown0 */
    0xEE, /* unknown1 */
    0xDD, /* unknown2 */
    0xCC, /* unknown3 */
    0xDE, 0xCA, 0xFA, 0xEF, 0xBE, 0xAD, 0xDE, 0x00, /* unknown4 */

    0x01, /* unknown5 */
] {
    login_logon_versions = "8";
}

test CMD_AUTH_LOGON_CHALLENGE_Server {
    login_result = FAIL_INCORRECT_PASSWORD;
} [
    0x00, /* Opcode: CMD_AUTH_LOGON_CHALLENGE */
    0x00, /* Protocol Version: 0 */
    0x05, /* Result: FAIL_INCORRECT_PASSWORD (5) */
] {
    login_logon_versions = "8";
}
