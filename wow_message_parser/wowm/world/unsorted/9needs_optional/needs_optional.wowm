#tag_all versions "1.12";
cmsg MSG_RAID_READY_CHECK_Client = 0x0322 {
    optional answer {
        u8 state;
    }
}

smsg MSG_RAID_READY_CHECK_Server = 0x0322 {
    optional state_check {
        Guid guid;
        u8 state;
    }
}

smsg SMSG_TRANSFER_PENDING = 0x003F {
    Map map;
    optional has_transport {
        u32 transport;
        Map transport_map;
    }
}

struct ItemStat {
    u32 item_stat_type;
    u32 item_stat_value;
}

struct ItemDamageType {
    u32 damage_minimum;
    u32 damage_maximum;
    u32 damage_type {
        comment = "mangoszero/vmangos/cmangos: id from Resistances.dbc";
    }
}

struct ItemSpells {
    Spell spell;   
    u32 spell_trigger;
    u32 spell_charges {
        comment = "let the database control the sign here. negative means that the item should be consumed once the charges are consumed.";
    }
    u32 spell_cooldown;
    u32 spell_category;
    u32 spell_category_cooldown;
}

cmsg CMSG_PET_SET_ACTION = 0x0174 {
    Guid guid;
    u32 position1;
    u32 data1;
    optional extra {
        u32 position2;
        u32 data2;
    }
}

cmsg CMSG_GOSSIP_SELECT_OPTION = 0x017C {
    Guid guid;
    u32 gossip_list_id;
    optional unknown {
        CString code {
            comment = "vmangos: if (_player->PlayerTalkClass->GossipOptionCoded(gossipListId))";
        }
    }
}


cmsg CMSG_TOGGLE_PVP = 0x0253 {
    optional set {
        Bool enable_pvp;
    }
} {
    comment = "vmangos: this opcode can be used in two ways: Either set explicit new status or toggle old status";
}

enum GroupType : u8 {
    NORMAL = 0;
    RAID = 1;
}

struct GroupListMember {
    CString name;
    Guid guid;
    Bool is_online;
}

smsg SMSG_GROUP_LIST = 0x007D {
    GroupType group_type;   
    u8 own_flags {
        comment = "mangoszero/cmangos/vmangos: own flags (groupid | (assistant?0x80:0))";
    }
    u32 amount_of_members;
    GroupListMember[amount_of_members] members;
    Guid leader;
    /* TODO: INT_EQUALS */
    optional group_not_empty {
        GroupLootSetting loot_setting;
        Guid master_loot {
            comment = "Zero if loot_setting is not MASTER_LOOT";
        }
        ItemQuality loot_threshold;
    }
}


