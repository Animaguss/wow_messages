#tag_all versions "1.12";
cmsg MSG_RAID_READY_CHECK_Client = 0x0322 {
    optional answer {
        u8 state;
    }
}

smsg MSG_RAID_READY_CHECK_Server = 0x0322 {
    optional state_check {
        Guid guid;
        u8 state;
    }
}

smsg SMSG_TRANSFER_PENDING = 0x003F {
    Map map;
    optional has_transport {
        u32 transport;
        Map transport_map;
    }
}

struct ItemStat {
    u32 item_stat_type;
    u32 item_stat_value;
}

struct ItemDamageType {
    u32 damage_minimum;
    u32 damage_maximum;
    u32 damage_type {
        comment = "mangoszero/vmangos/cmangos: id from Resistances.dbc";
    }
}

struct ItemSpells {
    Spell spell;   
    u32 spell_trigger;
    u32 spell_charges {
        comment = "let the database control the sign here. negative means that the item should be consumed once the charges are consumed.";
    }
    u32 spell_cooldown;
    u32 spell_category;
    u32 spell_category_cooldown;
}

smsg SMSG_ITEM_QUERY_SINGLE_RESPONSE = 0x0058 {
    Item item;
    /* TODO: INT_EQUALS */
    optional found {
        (u32)ItemClass item_class;
        u32 item_sub_class {
            comment = "mangoszero/vmangos/cmangos: client known only 0 subclass (and 1-2 obsolute subclasses)";
            comment = "mangoszero/vmangos/cmangos: id from ItemSubClass.dbc";
        }
        CString name1;
        CString name2;
        CString name3;
        CString name4;
        u32 item_display_info {
            comment = "mangoszero/vmangos/cmangos: id from ItemDisplayInfo.dbc";
        }
        (u32)ItemQuality quality;
        u32 flags;
        f64 buy_price;
        f64 sell_price;
        InventoryType inventory_type;
        /* TODO more typed */
        u32 allowed_class;
        u32 allowed_race;
        u32 item_level;
        u32 required_level;
        u32 required_skill {
            comment = "cmangos/vmangos/mangoszero: id from Spell.dbc";
        }
        u32 required_skill_rank;
        Spell required_spell;
        u32 required_honor_rank;
        u32 required_city_rank;
        u32 required_reputation_faction {
            comment = "cmangos/vmangos/mangoszero: id from Faction.dbc";
        }
        u32 required_reputation_rank {
            comment = "cmangos/vmangos/mangoszero: send value only if reputation faction id setted ( needed for some items)";
        }
        u32 max_count;
        u32 stackable;
        u32 container_slots;
        ItemStat[10] stats;
        ItemDamageType[5] damages;
        u32 armor;
        u32 holy_resistance;
        u32 fire_resistance;
        u32 nature_resistance;
        u32 frost_resistance;
        u32 shadow_resistance;
        u32 arcane_resistance;
        u32 delay;
        u32 ammo_type;
        f32 ranged_range_modification;
        ItemSpells[5] spells;
        u32 bonding;
        CString description;
        u32 page_text;
        u32 language_id;
        u32 page_material;
        u32 start_quest {
            comment = "cmangos/vmangos/mangoszero: id from QuestCache.wdb";
        }
        u32 lock_id;
        u32 material {
            comment = "cmangos/vmangos/mangoszero: id from Material.dbc";
        }
        u32 sheath;
        u32 random_property {
            comment = "cmangos/vmangos/mangoszero: id from ItemRandomProperties.dbc";
        }
        u32 block;
        u32 item_set {
            comment = "cmangos/vmangos/mangoszero: id from ItemSet.dbc";
        }
        u32 max_durability;
        Area area;
        Map map;
        u32 bag_family;
    } {
        comment = "mangos doesn't send this if item doesn't exist";
    }
}

smsg SMSG_GAMEOBJECT_QUERY_RESPONSE = 0x005F {
    u32 entry_id;
    /* TODO: INT_EQUALS */
    optional found {
        u32 info_type;
        u32 display_id;
        CString name1;
        CString name2;
        CString name3;
        CString name4;
        CString name5;
        /* TODO: Sure? */
        u32[6] raw_data;
    }
}

smsg SMSG_CREATURE_QUERY_RESPONSE = 0x61 {
    u32 creature_entry;
    /* TODO: INT_EQUALS */
    optional found {
        CString name1;
        CString name2;
        CString name3;
        CString name4;
        CString sub_name;
        u32 type_flags;
        u32 creature_type {
            comment = "cmangos: CreatureType.dbc   wdbFeild8";
        }
        u32 creature_family {
            comment = "cmangos: CreatureFamily.dbc";
        }
        u32 creature_rank {
            comment = "cmangos: Creature Rank (elite, boss, etc)";
        }
        u32 unknown0 {
            comment = "cmangos: wdbFeild11";
        }
        u32 spell_data_id {
            comment = "cmangos: Id from CreatureSpellData.dbc wdbField12";
        }
        u32 display_id {
            comment = "cmangos: DisplayID      wdbFeild13 and workaround, way to manage models must be fixed";
        }
        u8 civilian {
            comment = "cmangos: wdbFeild14";
        }
        u8 racial_leader;
    }
}



cmsg CMSG_PET_SET_ACTION = 0x0174 {
    Guid guid;
    u32 position1;
    u32 data1;
    optional extra {
        u32 position2;
        u32 data2;
    }
}

cmsg CMSG_GOSSIP_SELECT_OPTION = 0x017C {
    Guid guid;
    u32 gossip_list_id;
    optional unknown {
        CString code {
            comment = "vmangos: if (_player->PlayerTalkClass->GossipOptionCoded(gossipListId))";
        }
    }
}


cmsg CMSG_TOGGLE_PVP = 0x0253 {
    optional set {
        Bool enable_pvp;
    }
} {
    comment = "vmangos: this opcode can be used in two ways: Either set explicit new status or toggle old status";
}

enum GroupType : u8 {
    NORMAL = 0;
    RAID = 1;
}

struct GroupListMember {
    CString name;
    Guid guid;
    Bool is_online;
}

smsg SMSG_GROUP_LIST = 0x007D {
    GroupType group_type;   
    u8 own_flags {
        comment = "mangoszero/cmangos/vmangos: own flags (groupid | (assistant?0x80:0))";
    }
    u32 amount_of_members;
    GroupListMember[amount_of_members] members;
    Guid leader;
    /* TODO: INT_EQUALS */
    optional group_not_empty {
        GroupLootSetting loot_setting;
        Guid master_loot {
            comment = "Zero if loot_setting is not MASTER_LOOT";
        }
        ItemQuality loot_threshold;
    }
}


