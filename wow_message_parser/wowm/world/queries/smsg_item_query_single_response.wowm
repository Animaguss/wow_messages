enum SheatheType : u8 {
    NONE = 0;
    MAIN_HAND = 1;
    OFF_HAND = 2;
    LARGE_WEAPON_LEFT = 3;
    LARGE_WEAPON_RIGHT = 4;
    HIP_WEAPON_LEFT = 5;
    HIP_WEAPON_RIGHT = 6;
    SHIELD = 7;
} {
    rust_base_type = "true";
    versions = "1 2 3";
}

enum BagFamily : u8 {
    NONE = 0;
    ARROWS = 1;
    BULLETS = 2;
    SOUL_SHARDS = 3;
    UNKNOWN4 = 4;
    UNKNOWN5 = 5;
    HERBS = 6;
    ENCHANTING_SUPPLIES = 7;
    ENGINEERING_SUPPLIES = 8;
    KEYS = 9;
} {
    versions = "1.12";
    rust_base_type = "true";
}

enum SpellTriggerType : u8 {
    ON_USE = 0;
    ON_EQUIP = 1;
    CHANCE_ON_HIT = 2;
} {
    rust_base_type = "true";
    versions = "1";
}

struct ItemSpells {
    Spell spell;   
    (u32)SpellTriggerType spell_trigger;
    i32 spell_charges {
        comment = "let the database control the sign here. negative means that the item should be consumed once the charges are consumed.";
    }
    i32 spell_cooldown;
    u32 spell_category;
    i32 spell_category_cooldown;
} {
    rust_base_type = "true";
    versions = "1";
}

enum SpellTriggerType : u8 {
    ON_USE = 0;
    ON_EQUIP = 1;
    CHANCE_ON_HIT = 2;
    SERVER_SIDE_SCRIPT = 3 {
        comment = "cmangos-tbc: Only used by 23442, Glowing Sanctified Crystal which is used for a Hellfire Peninsula quest.";
        comment = "Unknown why exactly it does not use the normal triggers.";
    }
    SOULSTONE = 4;
    NO_EQUIP_COOLDOWN = 5;
    LEARN_SPELL_ID = 6;
} {
    rust_base_type = "true";
    versions = "2 3";
    comment = "azerothcore: `ItemSpelltriggerType` 5 might have changed on 2.4.3/3.0.3: Such auras will be applied on item pickup and removed on item loss - maybe on the other hand the item is destroyed if the aura is removed ('removed on death' of spell 57348 makes me think so)";
}

struct ItemSpells {
    Spell spell;   
    (u32)SpellTriggerType spell_trigger;
    i32 spell_charges {
        comment = "let the database control the sign here. negative means that the item should be consumed once the charges are consumed.";
    }
    i32 spell_cooldown;
    u32 spell_category;
    i32 spell_category_cooldown;
} {
    rust_base_type = "true";
    versions = "2 3";
}

struct ItemDamageType {
    f32 damage_minimum;
    f32 damage_maximum;
    (u32)SpellSchool school;
} {
    rust_base_type = "true";
    versions = "1 2 3";
}

enum ItemStatType : u8 {
    MANA = 0;
    HEALTH = 1;
    AGILITY = 3;
    STRENGTH = 4;
    INTELLECT = 5;
    SPIRIT = 6;
    STAMINA = 7;
} {
    rust_base_type = "true";
    versions = "1";
}

struct ItemStat {
    (u32)ItemStatType stat_type;
    i32 value;
} {
    rust_base_type = "true";
    versions = "1";
}

flag ItemFlag : u32 {
    NONE = 0x00000000;
    NO_PICKUP = 0x00000001 {
        comment = "not used";
    }
    CONJURED = 0x00000002;
    LOOTABLE = 0x00000004 {
        comment = "affect only non container items that can be 'open' for loot. It or lockid set enable for client show 'Right click to open'. See also `ITEM_DYNFLAG_UNLOCKED`";
    }
    DEPRECATED = 0x00000010 {
        comment = "can't repeat old note: appears red icon (like when item durability==0)";
    }
    INDESTRUCTIBLE = 0x00000020 {
        comment = "used for totem. Item can not be destroyed, except by using spell (item can be reagent for spell and then allowed)";
    }
    PLAYER_CAST = 0x00000040 {
        comment = "? old note: usable";
    }
    NO_EQUIP_COOLDOWN = 0x00000080;
    INT_BONUS_INSTEAD = 0x00000100;
    WRAPPER = 0x00000200 {
        comment = "used or not used wrapper";
    }
    IGNORE_BAG_SPACE = 0x00000400 {
        comment = "ignore bag space at new item creation?";
    }
    PARTY_LOOT = 0x00000800 {
        comment = "determines if item is party loot or not";
    }
    CHARTER = 0x00002000 {
        comment = "guild charter";
    }
    HAS_TEXT = 0x00004000 {
        comment = "Only readable items have this (but not all)";
    }
    NO_DISENCHANT = 0x00008000;
    REAL_DURATION = 0x00010000;
    NO_CREATOR = 0x00020000;
} {
    rust_base_type = "true";
    versions = "1.12";
}

enum PageTextMaterial : u8 {
    NONE = 0;
    PARCHMENT = 1;
    STONE = 2;
    MARBLE = 3;
    SILVER = 4;
    BRONZE = 5;
    VALENTINE = 6;
} {
    rust_base_type = "true";
    versions = "1.12";
}

enum PageTextMaterial : u8 {
    NONE = 0;
    PARCHMENT = 1;
    STONE = 2;
    MARBLE = 3;
    SILVER = 4;
    BRONZE = 5;
    VALENTINE = 6;
    ILLIDAN = 7;
} {
    rust_base_type = "true";
    versions = "2.4.3 3";
}

smsg SMSG_ITEM_QUERY_SINGLE_RESPONSE = 0x0058 {
    Item item;
    optional found {
        ItemClassAndSubClass class_and_sub_class;
        CString name1;
        CString name2;
        CString name3;
        CString name4;
        u32 display_id {
            comment = "id from ItemDisplayInfo.dbc";
        }
        (u32)ItemQuality quality;
        ItemFlag flags;
        Gold buy_price;
        Gold sell_price;
        (u32)InventoryType inventory_type;
        AllowedClass allowed_class;
        AllowedRace allowed_race;
        u32 item_level;
        u32 required_level;
        (u32)Skill required_skill;
        u32 required_skill_rank;
        Spell required_spell;
        u32 required_honor_rank;
        u32 required_city_rank;
        Faction required_faction;
        u32 required_faction_rank {
            comment = "cmangos/vmangos/mangoszero: send value only if reputation faction id setted ( needed for some items)";
        }
        u32 max_count;
        u32 stackable;
        u32 container_slots;
        ItemStat[10] stats;
        ItemDamageType[5] damages;
        i32 armor;
        i32 holy_resistance;
        i32 fire_resistance;
        i32 nature_resistance;
        i32 frost_resistance;
        i32 shadow_resistance;
        i32 arcane_resistance;
        u32 delay;
        u32 ammo_type;
        f32 ranged_range_modification;
        ItemSpells[5] spells;
        (u32)Bonding bonding;
        CString description;
        u32 page_text;
        (u32)Language language;
        (u32)PageTextMaterial page_text_material;
        u32 start_quest {
            comment = "cmangos/vmangos/mangoszero: id from QuestCache.wdb";
        }
        u32 lock_id;
        u32 material {
            comment = "cmangos/vmangos/mangoszero: id from Material.dbc";
        }
        (u32)SheatheType sheathe_type;
        u32 random_property {
            comment = "cmangos/vmangos/mangoszero: id from ItemRandomProperties.dbc";
        }
        u32 block;
        (u32)ItemSet item_set;
        u32 max_durability;
        Area area;
        Map map;
        (u32)BagFamily bag_family;
    } {
        comment = "mangos doesn't send this if item doesn't exist";
    }
} {
    versions = "1.12";
}

struct ItemStat {
    u32 stat_type;
    i32 value;
} {
    rust_base_type = "true";
    versions = "2 3";
}

struct ItemSocket {
    u32 color;
    u32 content;
} {
    rust_base_type = "true";
    versions = "2.4.3 3";
}

flag BagFamily : u32 {
    NONE = 0x00000000;
    ARROWS = 0x00000001;
    BULLETS = 0x00000002;
    SOUL_SHARDS = 0x00000004;
    LEATHERWORKING_SUPPLIES = 0x00000008;
    INSCRIPTION_SUPPLIES = 0x00000010;
    HERBS = 0x00000020;
    ENCHANTING_SUPPLIES = 0x00000040;
    ENGINEERING_SUPPLIES = 0x00000080;
    KEYS = 0x00000100;
    GEMS = 0x00000200;
    MINING_SUPPLIES = 0x00000400;
    SOULBOUND_EQUIPMENT = 0x00000800;
    VANITY_PETS = 0x00001000;
    CURRENCY_TOKENS = 0x00002000;
    QUEST_ITEMS = 0x00004000;
} {
    versions = "2.4.3 3";
    rust_base_type = "true";
}

flag ItemFlag : u32 {
    NO_PICKUP = 0x00000001 {
        comment = "not used";
    }
    CONJURED = 0x00000002 {
        comment = "items created by spells with `SPELL_EFFECT_CREATE_ITEM`";
    }
    LOOTABLE = 0x00000004 {
        comment = "affect only non container items that can be 'open' for loot. It or lockid set enable for client show 'Right click to open'. See also `ITEM_DYNFLAG_UNLOCKED`";
    }
    DEPRECATED = 0x00000010 {
        comment = "can't repeat old note: appears red icon (like when item durability==0)";
    }
    INDESTRUCTIBLE = 0x00000020 {
        comment = "used for totem. Item can not be destroyed, except by using spell (item can be reagent for spell and then allowed)";
    }
    PLAYER_CAST = 0x00000040 {
        comment = "? old note: usable";
    }
    NO_EQUIP_COOLDOWN = 0x00000080 {
        comment = "items without an equip cooldown (and usually a _USABLE flag)";
    }
    INT_BONUS_INSTEAD = 0x00000100 {
        comment = "saw this on item 47115, 49295...";
    }
    WRAPPER = 0x00000200 {
        comment = "used or not used wrapper";
    }
    IGNORE_BAG_SPACE = 0x00000400 {
        comment = "ignore bag space at new item creation?";
    }
    PARTY_LOOT = 0x00000800 {
        comment = "items which can be looted by all party members";
    }
    CHARTER = 0x00002000 {
        comment = "arena/guild charter";
    }
    LETTER = 0x00004000 {
        comment = "readable letter items";
    }
    NO_DISENCHANT = 0x00008000;
    REAL_DURATION = 0x00010000;
    NO_CREATOR = 0x00020000;
    PROSPECTABLE = 0x00040000 {
        comment = "item can have prospecting loot (in fact some items expected have empty loot)";
    }
    UNIQUE_EQUIPPED = 0x00080000 {
        comment = "custom server side check, in client added in 2.x";
    }
    IGNORE_FOR_AURAS = 0x00100000;
    IGNORE_DEFAULT_ARENA_RESTRICTIONS = 0x00200000 {
        comment = "Item can be used during arena match";
    }
    NO_DURABILITY_LOSS = 0x00400000 {
        comment = "Some Thrown weapons have it (and only Thrown) but not all";
    }
    SPECIAL_USE = 0x00800000;
} {
    rust_base_type = "true";
    versions = "2.4.3";
}

smsg SMSG_ITEM_QUERY_SINGLE_RESPONSE = 0x0058 {
    Item item;
    optional found {
        ItemClassAndSubClass class_and_sub_class;
        u32 sound_override_sub_class {
            comment = "mangosone: new 2.0.3, not exist in wdb cache?";
            comment = "mangosone sets to -1.";
            comment = "azerothcore: < 0: id from ItemSubClass.dbc, used to override weapon sound from actual sub class";
        }
        CString name1;
        CString name2;
        CString name3;
        CString name4;
        u32 display_id {
            comment = "id from ItemDisplayInfo.dbc";
        }
        (u32)ItemQuality quality;
        ItemFlag flags;
        Gold buy_price;
        Gold sell_price;
        (u32)InventoryType inventory_type;
        AllowedClass allowed_class;
        AllowedRace allowed_race;
        u32 item_level;
        u32 required_level;
        (u32)Skill required_skill;
        u32 required_skill_rank;
        Spell required_spell;
        u32 required_honor_rank;
        u32 required_city_rank;
        Faction required_faction;
        u32 required_faction_rank {
            comment = "cmangos/vmangos/mangoszero: send value only if reputation faction id setted ( needed for some items)";
        }
        u32 max_count;
        u32 stackable;
        u32 container_slots;
        ItemStat[10] stats;
        ItemDamageType[5] damages;
        i32 armor;
        i32 holy_resistance;
        i32 fire_resistance;
        i32 nature_resistance;
        i32 frost_resistance;
        i32 shadow_resistance;
        i32 arcane_resistance;
        u32 delay;
        u32 ammo_type;
        f32 ranged_range_modification;
        ItemSpells[5] spells;
        (u32)Bonding bonding;
        CString description;
        u32 page_text;
        (u32)Language language;
        (u32)PageTextMaterial page_text_material;
        u32 start_quest {
            comment = "cmangos/vmangos/mangoszero: id from QuestCache.wdb";
        }
        u32 lock_id;
        u32 material {
            comment = "cmangos/vmangos/mangoszero: id from Material.dbc";
        }
        (u32)SheatheType sheathe_type;
        u32 random_property {
            comment = "cmangos/vmangos/mangoszero: id from ItemRandomProperties.dbc";
        }
        u32 block;
        (u32)ItemSet item_set;
        u32 max_durability;
        Area area;
        Map map;
        BagFamily bag_family;
        u32 totem_category {
            comment = "mangosone: id from TotemCategory.dbc";
        }
        ItemSocket[3] sockets;
        u32 socket_bonus;
        u32 gem_properties;
        u32 required_disenchant_skill;
        f32 armor_damage_modifier;
        u32 duration_in_seconds {
            comment = "mangosone: added in 2.4.2.8209, duration (seconds)";
        }
    } {
        comment = "mangos doesn't send this if item doesn't exist";
    }
} {
    versions = "2.4.3";
}

flag ItemFlag : u32 {
    NO_PICKUP                         = 0x00000001;
    CONJURED = 0x00000002 {
        comment = "Conjured item";
    }
    LOOTABLE = 0x00000004 {
        comment = "Item can be right clicked to open for loot";
    }
    HEROIC_TOOLTIP = 0x00000008 {
        comment = "Makes green 'Heroic' text appear on item";
    }
    DEPRECATED = 0x00000010 {
        comment = "Cannot equip or use";
    }
    INDESTRUCTIBLE = 0x00000020 {
        comment = "Item can not be destroyed, except by using spell (item can be reagent for spell)";
    }
    PLAYER_CAST = 0x00000040 {
        comment = "Item's spells are castable by players";
    }
    NO_EQUIP_COOLDOWN = 0x00000080 {
        comment = "No default 30 seconds cooldown when equipped";
    }
    MULTI_LOOT_QUEST = 0x00000100;
    WRAPPER = 0x00000200 {
        comment = "Item can wrap other items";
    }
    USES_RESOURCES = 0x00000400;
    MULTI_DROP = 0x00000800 {
        comment = "Looting this item does not remove it from available loot";
    }
    ITEM_PURCHASE_RECORD = 0x00001000 {
        comment = "Item can be returned to vendor for its original cost (extended cost)";
    }
    CHARTER = 0x00002000 {
        comment = "Item is guild or arena charter";
    }
    HAS_TEXT = 0x00004000 {
        comment = "Only readable items have this (but not all)";
    }
    NO_DISENCHANT = 0x00008000;
    REAL_DURATION = 0x00010000;
    NO_CREATOR = 0x00020000;
    IS_PROSPECTABLE = 0x00040000 {
        comment = "Item can be prospected";
    }
    UNIQUE_EQUIPPED = 0x00080000 {
        comment = "You can only equip one of these";
    }
    IGNORE_FOR_AURAS = 0x00100000;
    IGNORE_DEFAULT_ARENA_RESTRICTIONS = 0x00200000 {
        comment = "Item can be used during arena match";
    }
    NO_DURABILITY_LOSS = 0x00400000 {
        comment = "Some Thrown weapons have it (and only Thrown) but not all";
    }
    USE_WHEN_SHAPESHIFTED = 0x00800000 {
        comment = "Item can be used in shapeshift forms";
    }
    HAS_QUEST_GLOW = 0x01000000;
    HIDE_UNUSABLE_RECIPE = 0x02000000 {
        comment = "Profession recipes: can only be looted if you meet requirements and don't already know it";
    }
    NOT_USEABLE_IN_ARENA = 0x04000000 {
        comment = "Item cannot be used in arena";
    }
    IS_BOUND_TO_ACCOUNT = 0x08000000 {
        comment = "Item binds to account and can be sent only to your own characters";
    }
    NO_REAGENT_COST = 0x10000000 {
        comment = "Spell is cast ignoring reagents";
    }
    IS_MILLABLE = 0x20000000 {
        comment = "Item can be milled";
    }
    REPORT_TO_GUILD_CHAT = 0x40000000;
    NO_PROGRESSIVE_LOOT = 0x80000000;
} {
    rust_base_type = "true";
    versions = "3.3.5";
}

flag ItemFlag2 : u32 {
    FACTION_HORDE                            = 0x00000001;
    FACTION_ALLIANCE                         = 0x00000002;
    DONT_IGNORE_BUY_PRICE                    = 0x00000004 {
        comment = "when item uses extended cost, gold is also required";
    }
    CLASSIFY_AS_CASTER                       = 0x00000008;
    CLASSIFY_AS_PHYSICAL                     = 0x00000010;
    EVERYONE_CAN_ROLL_NEED                   = 0x00000020;
    NO_TRADE_BIND_ON_ACQUIRE                 = 0x00000040;
    CAN_TRADE_BIND_ON_ACQUIRE                = 0x00000080;
    CAN_ONLY_ROLL_GREED                      = 0x00000100;
    CASTER_WEAPON                            = 0x00000200;
    DELETE_ON_LOGIN                          = 0x00000400;
    INTERNAL_ITEM                            = 0x00000800;
    NO_VENDOR_VALUE                          = 0x00001000;
    SHOW_BEFORE_DISCOVERED                   = 0x00002000;
    OVERRIDE_GOLD_COST                       = 0x00004000;
    IGNORE_DEFAULT_RATED_BG_RESTRICTIONS     = 0x00008000;
    NOT_USABLE_IN_RATED_BG                   = 0x00010000;
    BNET_ACCOUNT_TRADE_OK                    = 0x00020000;
    CONFIRM_BEFORE_USE                       = 0x00040000;
    REEVALUATE_BONDING_ON_TRANSFORM          = 0x00080000;
    NO_TRANSFORM_ON_CHARGE_DEPLETION         = 0x00100000;
    NO_ALTER_ITEM_VISUAL                     = 0x00200000;
    NO_SOURCE_FOR_ITEM_VISUAL                = 0x00400000;
    IGNORE_QUALITY_FOR_ITEM_VISUAL_SOURCE    = 0x00800000;
    NO_DURABILITY                            = 0x01000000;
    ROLE_TANK                                = 0x02000000;
    ROLE_HEALER                              = 0x04000000;
    ROLE_DAMAGE                              = 0x08000000;
    CAN_DROP_IN_CHALLENGE_MODE               = 0x10000000;
    NEVER_STACK_IN_LOOT_UI                   = 0x20000000;
    DISENCHANT_TO_LOOT_TABLE                 = 0x40000000;
    USED_IN_A_TRADESKILL                     = 0x80000000;
} {
    rust_base_type = "true";
    versions = "3.3.5";
}

smsg SMSG_ITEM_QUERY_SINGLE_RESPONSE = 0x0058 {
    Item item;
    optional found {
        ItemClassAndSubClass class_and_sub_class;
        u32 sound_override_sub_class {
            comment = "mangosone: new 2.0.3, not exist in wdb cache?";
            comment = "mangosone sets to -1.";
            comment = "azerothcore: < 0: id from ItemSubClass.dbc, used to override weapon sound from actual sub class";
        }
        CString name1;
        CString name2;
        CString name3;
        CString name4;
        u32 display_id {
            comment = "id from ItemDisplayInfo.dbc";
        }
        (u32)ItemQuality quality;
        ItemFlag flags;
        ItemFlag2 flags2;
        Gold buy_price;
        Gold sell_price;
        (u32)InventoryType inventory_type;
        AllowedClass allowed_class;
        AllowedRace allowed_race;
        u32 item_level;
        u32 required_level;
        (u32)Skill required_skill;
        u32 required_skill_rank;
        Spell required_spell;
        u32 required_honor_rank;
        u32 required_city_rank;
        Faction required_faction;
        u32 required_faction_rank {
            comment = "cmangos/vmangos/mangoszero: send value only if reputation faction id setted ( needed for some items)";
        }
        u32 max_count;
        u32 stackable;
        u32 container_slots;
        u32 amount_of_stats;
        ItemStat[amount_of_stats] stats;
        u32 scaling_stats_entry;
        u32 scaling_stats_flag;
        ItemDamageType[2] damages;
        i32 armor;
        i32 holy_resistance;
        i32 fire_resistance;
        i32 nature_resistance;
        i32 frost_resistance;
        i32 shadow_resistance;
        i32 arcane_resistance;
        u32 delay;
        u32 ammo_type;
        f32 ranged_range_modification;
        ItemSpells[5] spells;
        (u32)Bonding bonding;
        CString description;
        u32 page_text;
        (u32)Language language;
        (u32)PageTextMaterial page_text_material;
        u32 start_quest {
            comment = "cmangos/vmangos/mangoszero: id from QuestCache.wdb";
        }
        u32 lock_id;
        u32 material {
            comment = "cmangos/vmangos/mangoszero: id from Material.dbc";
        }
        (u32)SheatheType sheathe_type;
        u32 random_property {
            comment = "cmangos/vmangos/mangoszero: id from ItemRandomProperties.dbc";
        }
        u32 random_suffix;
        u32 block;
        (u32)ItemSet item_set;
        u32 max_durability;
        Area area;
        Map map;
        BagFamily bag_family;
        u32 totem_category {
            comment = "mangosone: id from TotemCategory.dbc";
        }
        ItemSocket[3] sockets;
        u32 socket_bonus;
        u32 gem_properties;
        u32 required_disenchant_skill;
        f32 armor_damage_modifier;
        u32 duration_in_seconds {
            comment = "mangosone: added in 2.4.2.8209, duration (seconds)";
        }
        u32 item_limit_category;
        u32 holiday_id {
            comment = "mangosone: HolidayId - points to HolidayNames.dbc";
        }
    } {
        comment = "mangos doesn't send this if item doesn't exist";
    }
} {
    versions = "3.3.5";
}
